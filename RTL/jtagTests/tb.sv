/*
    Automatically generated by Fault
    Do not modify.
    Generated on: 2020-01-03 00:34:53
*/
`include "Tech/osu035/osu035_stdcells.v"
`include "Netlists/RTL/ISCAS_89/s27.v.netlist.v.chained.v.jtag.v.intermediate.v"

module testbench;
    reg[0:0] \G1 ;
    wire[0:0] \tdo ;
    wire[0:0] \G17 ;
    reg[0:0] \tdi ;
    reg[0:0] \G3 ;
    reg[0:0] \G2 ;
    reg[0:0] \CK ;
    reg[0:0] \GND ;
    reg[0:0] \reset ;
    reg[0:0] \VDD ;
    reg[0:0] \trst ;
    reg[0:0] \tck ;
    reg[0:0] \G0 ;
    reg[0:0] \tms ;

    
    always #1 CK = ~CK;
    always #1 tck = ~tck;

    s27 uut(
        .\G1 ( \G1 ) , .\tdo ( \tdo ) , .\G17 ( \G17 ) , .\tdi ( \tdi ) , .\G3 ( \G3 ) , .\G2 ( \G2 ) , .\CK ( \CK ) , .\GND ( \GND ) , .\reset ( \reset ) , .\VDD ( \VDD ) , .\trst ( \trst ) , .\tck ( \tck ) , .\G0 ( \G0 ) , .\tms ( \tms ) 
    );

    integer i;

    wire[3:0] extest = 4'b 0000;
    wire[3:0] samplePreload = 4'b 0001;
    wire[3:0] idcode = 4'b 0010;
    wire[3:0] bypass = 4'b 1111;
    
    wire[3:0] ir_reg = 4'b 0101;
    wire[9:0] serializable =
        10'b1001011010;
    reg[9:0] serial;

    initial begin
        $dumpfile("RTL/jtagTests/dut.vcd");
        $dumpvars(0, testbench);
        \GND = 0 ;
        \VDD = 0 ;
        \CK = 0 ;
        \reset = 1 ;
        \G0 = 0 ;
        \G1 = 0 ;
        \G2 = 0 ;
        \G3 = 0 ;
        \tms = 1 ;
        \tck = 0 ;
        \tdi = 0 ;
        \trst = 0 ;

        #10;
        reset = ~reset;
        trst = 1;        
        #2;
        /*
            Test Sample/Preload Instruction
        */
        tms = 1;   // test logic reset state
        #10;
        tms = 0;  // run-test idle state
        #2;
        tms = 1;  // select-DR state
        #2;
        tms = 1;  // select-IR state
        #2;
        tms = 0;  // capture IR
        #2;
        tms = 0;  // Shift IR state
        #2

        // shift new instruction on tdi line
        for (i = 0; i < 4; i = i + 1) begin
            tdi = samplePreload[i];
            if(i == 3) begin
                tms = 1;   // exit-ir
            end
            #2;
        end

        tms = 1; // update-ir 
        #2;
        tms = 0; // run test-idle
        #4;
        if (uut.sample_preload_select_o != 1) begin
            $error("LOADING SAMPLE/PRELOAD INST FAILED");
            $finish;
        end 
        #2;

        tms = 1;   // test logic reset 
        #10;
        tms = 0;   // run-test idle 
        #2;
        tms = 1;  // select-DR 
        #2;
        tms = 0;  // capture-DR 
                \GND = 0 ;
        \VDD = 1 ;
        \G0 = 0 ;
        \G1 = 1 ;
        \G2 = 1 ;
        \G3 = 1 ;
        \tdi = 0 ;
    
        #4;
        tms = 0;  // shift-DR 
        tdi = 0;
        #2;
        for (i = 0; i < 10; i = i + 1) begin
            tdi = 0;
            #2;
        end
        for (i = 0; i < 10; i = i + 1) begin  // observe I/O pins 
            serial[i] = tdo;
            #2;
        end
        if (serial == serializable) begin
            $display("SUCCESS_STRING");
        end
        #1000;
        $display("SUCCESS_STRING");
        $finish;
    end
endmodule
