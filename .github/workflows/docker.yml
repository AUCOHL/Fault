name: Build Docker Images

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build_docker_images:
    strategy:
      fail-fast: false
      matrix:
        os: [
            {
              name: "Ubuntu 22.04",
              family: "linux",
              runner: "ubuntu-22.04",
              arch: "x86_64",
            },
            {
              name: "Ubuntu 22.04",
              family: "linux",
              runner: "ubuntu-22.04-arm",
              arch: "aarch64",
            }
          ]
    name: Build Docker Image | ${{ matrix.os.name }} | ${{ matrix.os.arch }}
    runs-on: ${{ matrix.os.runner }}
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false
      - name: Get version
        run: |
          echo "FAULT_VERSION=$(perl -ne 'print $1 if /let VERSION = "([^"]+)"/' Sources/Fault/Entries/main.swift)" >> $GITHUB_ENV
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/aucohl/fault:${{ env.FAULT_VERSION}}-${{ matrix.os.arch }}
          cache-from: type=registry,ref=ghcr.io/aucohl/fault:${{ env.FAULT_VERSION}}-${{ matrix.os.arch }}
          cache-to: type=inline
          build-args: FAULT_VERSION=${{ env.FAULT_VERSION }}
          context: ./.github/workflows
  create_manifest:
    name: Create and push multi-arch manifest
    needs: build_docker_images
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Get version
        run: |
          echo "FAULT_VERSION=$(perl -ne 'print $1 if /let VERSION = "([^"]+)"/' Sources/Fault/Entries/main.swift)" >> $GITHUB_ENV
      - name: Create and push manifest
        run: |
          docker manifest create ghcr.io/aucohl/fault:$FAULT_VERSION \
            --amend ghcr.io/aucohl/fault:$FAULT_VERSION-x86_64 \
            --amend ghcr.io/aucohl/fault:$FAULT_VERSION-aarch64
          docker manifest push ghcr.io/aucohl/fault:$FAULT_VERSION
